docker ps (-a) (-l 'last')
docker logs <container> (-f 'tail -f')

docker start <container>
docker stop <container>
docker attach <container>

docker top <container>
docker inspect <container>

docker rm <container>

docker images
docker rmi <image>
docker pull <image>
docker search <...>

docker build .
docker build -t <name>
docker tag XXXXXX <user/name:tag>


docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' <container>


sudo docker run -d -p 8080:5000 training/webapp python app.py
docker run -d -p <local>:<container> <image> <app> <...args>
-d - run background
-p [local_port]:[container_port] - 'forward the local port to the container port'

-P - map all necessary ports

docker run -i -t ubuntu /bin/bash
-i - interactive
-t - make tty


# some more 'run' options
--rm - 'Destroy a container once its exits'
--name


# clear logs
truncate -s 0 $(docker inspect -f '{{.LogPath}}' <container>)


# ls only volume id`s
docker volume ls | sed 's/\s\+/,/' | cut -d, -f2 | sed 1d


# named volumes
`docker volume create --name cache_volume`
`... -v cache_volume:/var/cache`
`docker volume inspect cache_volume`


##########################
# dns in virtual machine #

sysctl -w net.ipv4.ip_forward=1  # (optional)
nmcli dev show | grep DNS        # get dns (insert to '<>' below)
nm-tool                          # (old)

# this way:
"/etc/default/docker"
DOCKER_OPTS="--dns <>"
service docker restart
# check for:
  `/lib/systemd/system/docker.service`
  `line "ExecStart=/usr/bin/dockerd" to have "$DOCKER_OPTS" in the end`


# or that way:
"/etc/docker/daemon.json"
{"dns": ["<>", "8.8.8.8"] }

docker run -ti --rm --dns <...> ubuntu /bin/bash
###########################
###########################


# with gui
docker run --rm -ti -e DISPLAY=$DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix <container> <command>

# could be necessary to add:
# give docker the rights to access the X-Server
xhost +local:docker
